name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # or your branch name

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: chali009/fitness-app:latest

    - name: SSH and deploy on EC2
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker pull chali009/fitness-app:latest
          docker stop fitness-container || true
          docker rm fitness-container || true
          docker run -d -p 80:80 --name fitness-container chali009/fitness-app:latest
    - name: Test deployed app
      run: |
        echo "Testing deployed application..."
        RESPONSE=$(curl --write-out '%{http_code}' --silent --output /dev/null http://${{ secrets.EC2_HOST }})
        if [ "$RESPONSE" -ne 200 ]; then
          echo "App test failed! HTTP status: $RESPONSE"
          exit 1
        else
          echo "App test passed!"
        fi


